name: tests

on: [push]

jobs:
  pre-build-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: echo "cache" >> cache
      - uses: actions/upload-artifact@v3
        with:
          name: cache
          path: ./cache
      - run: tar -cvf cache.tar cache
      - uses: actions/upload-artifact@v3
        with:
          name: cache-tar
          path: ./cache.tar

  build-docker:
    uses: ./.github/workflows/build-docker.yml
    needs: pre-build-docker
    strategy:
      matrix:
        include:
          - name: base
          - name: with-cache
            cache-name: cache
          - name: with-cache
            cache-name: cache-tar
            pre-build: tar -xvf ./.github/tests/build-docker/cache.tar -C ./.github/tests/build-docker
    with:
      name: mikojs/${{ matrix.name }}
      cache-name: ${{ matrix.cache-name }}
      cache-path: ./.github/tests/build-docker
      pre-build: ${{ matrix.pre-build }}
      context: ./.github/tests/build-docker
      file: ./.github/tests/build-docker/Dockerfile.${{ matrix.name }}

  build-rust:
    uses: ./.github/workflows/build-rust.yml

  post-build-rust:
    runs-on: ubuntu-latest
    needs: build-rust
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: rust
      - run: tar -xvf ./release.tar
      - run: test "$(./release)" == "hello world" || echo "::error title=rust::run command fail"

  final-check:
    runs-on: ubuntu-latest
    needs:
      - build-docker
      - post-build-rust
    steps:
      - uses: actions/checkout@v3
